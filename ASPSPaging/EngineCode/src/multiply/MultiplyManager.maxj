package multiply;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;
import com.maxeler.maxcompiler.v2.managers.standard.Manager.IOType;

class MultiplyManager{

	static final int tileSize = 384;

	public static void main(String[] args) {
		Manager manager = new Manager(new EngineParameters(args));
		Kernel kernel = new MultiplyKernel(manager.makeKernelParameters(), tileSize);
		manager.setKernel(kernel);
		manager.setIO(IOType.ALL_CPU);
		manager.createSLiCinterface(interfaceDefault());
		manager.addMaxFileConstant("tileSize", tileSize);
		manager.build();
	}


	private static EngineInterface interfaceDefault() {
		EngineInterface ei = new EngineInterface();

		InterfaceParam length = ei.addParam("length", CPUTypes.INT);
		InterfaceParam lengthInBytes = length * CPUTypes.FLOAT.sizeInBytes();

		ei.setTicks("MatMatMultiplyKernel", tileSize*tileSize);
		ei.setStream("vectorInput", CPUTypes.FLOAT, lengthInBytes);
		ei.setStream("input", CPUTypes.FLOAT, lengthInBytes);
		ei.setStream("output", CPUTypes.FLOAT, lengthInBytes);

		return ei;
	}
}
